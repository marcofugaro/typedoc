{"version":3,"file":"converter.test.js","sourceRoot":"","sources":["../../src/test/converter.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { Application, resetReflectionID, normalizePath, ProjectReflection } from '..';\nimport * as FS from 'fs';\nimport * as Path from 'path';\nimport { deepStrictEqual as equal, ok } from 'assert';\nimport { ScriptTarget, ModuleKind, JsxEmit } from 'typescript';\n\nimport json = require('./converter/class/specs.json');\nimport { JSONOutput } from '../lib/serialization';\n\ndescribe('Converter', function() {\n    const base = Path.join(__dirname, 'converter');\n    const app = new Application();\n    app.bootstrap({\n        mode: 'modules',\n        logger: 'none',\n        target: ScriptTarget.ES5,\n        module: ModuleKind.CommonJS,\n        experimentalDecorators: true,\n        jsx: JsxEmit.React,\n        name: 'typedoc',\n        ignoreCompilerErrors: true,\n        excludeExternals: true\n    });\n\n    const checks: [string, () => void, () => void][] = [\n        ['specs', () => { }, () => { }],\n        ['specs.d',\n            () => app.options.setValue('includeDeclarations', true).unwrap(),\n            () => app.options.setValue('includeDeclarations', false).unwrap()\n        ],\n        ['specs-without-exported',\n            () => app.options.setValue('excludeNotExported', true).unwrap(),\n            () => app.options.setValue('excludeNotExported', false).unwrap()\n        ],\n        ['specs-with-lump-categories',\n            () => app.options.setValue('categorizeByGroup', false).unwrap(),\n            () => app.options.setValue('categorizeByGroup', true).unwrap()\n        ],\n        ['specs.lib',\n            () => app.options.setValue('mode', 'library').unwrap(),\n            () => app.options.setValue('mode', 'modules').unwrap()\n        ]\n    ];\n\n    FS.readdirSync(base).forEach(function (directory) {\n        const path = Path.join(base, directory);\n        if (!FS.lstatSync(path).isDirectory()) {\n            return;\n        }\n\n        describe(directory, function() {\n            for (const [file, before, after] of checks) {\n                const specsFile = Path.join(path, `${file}.json`);\n                if (!FS.existsSync(specsFile)) {\n                    continue;\n                }\n\n                let result: ProjectReflection | undefined;\n\n                it(`[${file}] converts fixtures`, function() {\n                    before();\n                    resetReflectionID();\n                    result = app.convert(app.expandInputFiles([path]));\n                    after();\n                    ok(result instanceof ProjectReflection, 'No reflection returned');\n                });\n\n                it(`[${file}] matches specs`, function() {\n                    const specs = JSON.parse(FS.readFileSync(specsFile, 'utf-8'));\n                    let data = JSON.stringify(app.serializer.toObject(result), null, '  ');\n                    data = data.split(normalizePath(base)).join('%BASE%');\n\n                    equal(JSON.parse(data), specs);\n                });\n            }\n        });\n    });\n});\n\ndescribe('Serializer', () => {\n    it('Type checks', () => {\n        const typed: JSONOutput.ProjectReflection = json;\n        equal(json, typed);\n    });\n});\n"]}